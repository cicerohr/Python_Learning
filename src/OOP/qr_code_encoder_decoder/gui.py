"""
This file was generated by the Tkinter.

@app: Tkinter Designer
@author: Parth Jadhav
@license: BSD 3-Clause "New" or "Revised" License
@link: https://github.com/ParthJadhav/Tkinter-Designer
@image: Mitya Ivanov
@link: https://bit.ly/3wWrOL3
@modified by: Cícero
"""

from idlelib.tooltip import Hovertip
from pathlib import Path
from tkinter import (
    Tk,
    Canvas,
    Entry,
    Button,
    PhotoImage,
    messagebox,
    filedialog,
)

from qr_code_decoder import QRCodeDecoder as QRDecoder
from qr_code_encoder import QRCodeEncoder as QREncoder

color_bg = '#383A59'
color_title = '#BD93F9'
color_text = '#F8F8F8'
color_accent = '#BCC2CD'
font_h1 = ('RobotoRoman Bold', 40 * -1)
font_h3 = ('RobotoRoman Bold', 20 * -1)
font_accent_small = ('RobotoRoman Thin', 12 * -1)
font_entry = ('Roboto', 15 * -1)
arquivo_descodificar = ''
OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path('assets')


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def btn_iniciar_clicado() -> None:
    """Inicia o processo de código QR."""
    texto_gerar = entry_1.get()
    texto_gerar = texto_gerar.strip()
    arquivo_descodificar = entry_2.get()
    arquivo_descodificar = arquivo_descodificar.strip()

    if not texto_gerar and not arquivo_descodificar:
        messagebox.showerror(
            'Erro',
            'Por favor, insira um texto para gerar ou selecione uma '
            'pasta para descodificar o QR Code.',
        )
        return

    if texto_gerar and arquivo_descodificar:
        messagebox.showerror(
            'Erro',
            'Por favor, utilize apenas um dos campos para gerar ou '
            'selecione uma pasta para descodificar o QR Code.',
        )
        limpar_entradas()
        return

    if texto_gerar:
        messagebox.showinfo(
            'Sucesso',
            f'O QR Code foi gerado com sucesso em:\n{QREncoder(texto_gerar)}',
        )
        limpar_entradas()

    if arquivo_descodificar:
        entry_3.delete(0, 'end')
        text_qr_code = f'{QRDecoder(arquivo_descodificar)}'
        if text_qr_code[:4] != 'Erro':
            entry_3.insert(0, text_qr_code)
            messagebox.showinfo(
                'Sucesso', 'QR Code descodificado com sucesso.'
            )
            limpar_entradas()
        else:
            messagebox.showerror('Erro', f'{text_qr_code}')
            limpar_entradas()


def btn_selecionar_clicado() -> None:
    """Seleciona o arquivo para descodificar."""
    global arquivo_descodificar

    arquivo_descodificar = filedialog.askopenfilename()
    entry_2.delete(0, 'end')
    entry_2.insert(0, arquivo_descodificar)


def btn_copiar_clicado() -> None:
    """Copia o texto do QR Code para a área de transferência."""
    text_qr_code = entry_3.get()
    if text_qr_code:
        window.clipboard_clear()
        window.clipboard_append(text_qr_code)
        entry_3.delete(0, 'end')
    else:
        messagebox.showerror('Erro', 'Não há texto para copiar.')


def limpar_entradas() -> None:
    """Limpa as entradas de texto da interface."""
    entry_1.delete(0, 'end')
    entry_2.delete(0, 'end')


# Inicialização da ‘interface’
window = Tk()
window.iconbitmap(relative_to_assets('icon.ico'))

# Posicionamento da janela no centro da tela
window_width = 700
window_height = 436
left_position = (window.winfo_screenwidth() - window_width) // 2
top_position = (window.winfo_screenheight() - window_height) // 2
window.geometry(
    f'{window_width}x{window_height}+{left_position}+{top_position}'
)

window.configure(bg=color_bg)
window.title('QR Code Encoder/Decoder')

canvas = Canvas(
    window,
    bg=color_bg,
    width=window_width,
    height=window_height,
    bd=0,
    highlightthickness=0,
    relief='ridge',
)
canvas.place(x=0, y=0)

# Imagem de vários QR Codes à esquerda
image_image_1 = PhotoImage(file=relative_to_assets('image_1.png'))
image_1 = canvas.create_image(85.0, 200.0, image=image_image_1)

# Título da interface
canvas.create_text(
    314.0,
    30.0,
    anchor='nw',
    text='QR Code App',
    fill=color_title,
    font=font_h1,
    tags=('H1', 'texto'),
)

# Subtítulo da interface
canvas.create_text(
    235.0,
    103.0,
    anchor='nw',
    text='Gerar QR Code:',
    fill=color_title,
    font=font_h3,
    tags=('H3', 'texto'),
)

# Texto de explicação para o usuário
canvas.create_text(
    235.0,
    139.0,
    anchor='nw',
    text='Digite o texto que você deseja codificar no campo abaixo.',
    fill=color_accent,
    font=font_accent_small,
    tags=('accent', 'texto'),
)

# Entrada de texto para gerar o QR Code
entry_image_1 = PhotoImage(file=relative_to_assets('entry_1.png'))
entry_bg_1 = canvas.create_image(435.0, 179.5, image=entry_image_1)
entry_1 = Entry(bd=0, bg=color_accent, highlightthickness=0)
entry_1.place(x=240.0, y=166.0, width=393.0, height=25.0)

# Subtítulo da interface
canvas.create_text(
    235.0,
    220.0,
    anchor='nw',
    text='Descodificar QR Code:',
    fill=color_title,
    font=font_h3,
    tags=('H3', 'texto'),
)

# Texto de explicação para o usuário
canvas.create_text(
    235.0,
    255.0,
    anchor='nw',
    text='Selecione a pasta onde esta o Qr Code para descodificar.',
    fill=color_accent,
    font=font_accent_small,
    tags=('accent', 'texto'),
)

# Entrada de texto para descodificar o QR Code
entry_image_2 = PhotoImage(file=relative_to_assets('entry_2.png'))
entry_bg_2 = canvas.create_image(435.0, 294.5, image=entry_image_2)
entry_2 = Entry(bd=0, bg=color_accent, highlightthickness=0)
entry_2.place(x=240.0, y=281.0, width=390.0, height=25.0)

# Botão para selecionar um arquivo para descodificar
button_image_1 = PhotoImage(file=relative_to_assets('button_1.png'))
btn_selecionar = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=btn_selecionar_clicado,
    relief='flat',
    cursor='hand2',
)
btn_selecionar.place(x=605.0, y=283.0, width=24.0, height=23.0)
btn_selecionar_tip = Hovertip(
    btn_selecionar, 'Clique para\n selecionar\n o arquivo.', 500
)

# Botão para iniciar o processo
button_image_2 = PhotoImage(file=relative_to_assets('button_2.png'))
btn_iniciar = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=btn_iniciar_clicado,
    relief='flat',
    cursor='hand2',
)
btn_iniciar.place(x=371.0, y=335.0, width=127.0, height=35.0)

# Campo de texto para exibir o resultado da descodificação
entry_image_3 = PhotoImage(file=relative_to_assets('entry_3.png'))
entry_bg_3 = canvas.create_image(350.0, 418.0, image=entry_image_3)
entry_3 = Entry(
    bd=0,
    bg=color_accent,
    font=font_entry,
    justify='center',
    highlightthickness=0,
)
entry_3.place(x=0.0, y=400.0, width=700.0, height=34.0)

# Botão para copiar o texto para a área de transferência
button_image_3 = PhotoImage(file=relative_to_assets('button_3.png'))
btn_clipboard = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=btn_copiar_clicado,
    relief='flat',
    cursor='hand2',
)
btn_clipboard.place(x=670.0, y=406.0, width=24.0, height=24.0)
btn_clipboard_tip = Hovertip(
    btn_clipboard, 'Clique para copiar à\n área de transferência.', 500
)

window.resizable(False, False)
window.mainloop()
